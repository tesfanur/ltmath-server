"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.userTypedefs = undefined;

var _templateObject = _taggedTemplateLiteral(["\n  #  fragment UserDetails on User{\n  #     username: String\n  #     email: String\n  #     usertype: UserType = STUDNET\n  #   }\n  enum UserType {\n    STUDENT\n    PARENT\n    TEACHER\n    AUTHOR\n    ADMIN\n  }\n  \"\"\"\n  Response type for user login and signin\n  \"\"\"\n  type User {\n    _id: String\n    username: String!\n    email: String!\n    usertype: UserType\n    createdAt: String\n    updatedAt: String\n  }\n  \"\"\"\n  User registration input type\n  \"\"\"\n  type Token {\n    token: String\n  }\n  \"\"\"\n  User registration input type\n  \"\"\"\n  input userRegistrationInput {\n    username: String!\n    email: String!\n    password: String!\n    confirmPassword: String!\n    usertype: UserType = STUDNET\n  }\n  \"\"\"\n  User signin input type\n  \"\"\"\n  input userSigninInput {\n    username: String\n    password: String\n  }\n  # \"\"\"\n  # User signin response type\n  # \"\"\"\n  # type signinResponse {\n  #   successMessage: String\n  #   usertype: UserType\n  #   username: String\n  #   email: String\n  #   token: String\n  #   _id: String\n  # }\n\n  type Query {\n    \"\"\"\n    finds currently loggedin user\n    \"\"\"\n    currentUser: User!\n    \"\"\"\n    authentication error message\n    \"\"\"\n    authenticationError: String\n    \"\"\"\n    finds list of all users\n    \"\"\"\n    users: [User!]!\n    \"\"\"\n    find user by email\n    \"\"\"\n    getUserByEmail(email: String): User!\n    \"\"\"\n    find user by username\n    \"\"\"\n    getUserByUsername(username: String): User!\n    \"\"\"\n    find user by user id\n    \"\"\"\n    getUserByID(userId: ID): User!\n  }\n  type Mutation {\n    \"\"\"\n    singnup by user\n    \"\"\"\n    signup(input: userRegistrationInput): Token\n    \"\"\"\n    signin user\n    \"\"\"\n    signin(input: userSigninInput): Token\n    \"\"\"\n    delete user\n    \"\"\"\n    deleteUserById(userId: ID): User\n  }\n"], ["\n  #  fragment UserDetails on User{\n  #     username: String\n  #     email: String\n  #     usertype: UserType = STUDNET\n  #   }\n  enum UserType {\n    STUDENT\n    PARENT\n    TEACHER\n    AUTHOR\n    ADMIN\n  }\n  \"\"\"\n  Response type for user login and signin\n  \"\"\"\n  type User {\n    _id: String\n    username: String!\n    email: String!\n    usertype: UserType\n    createdAt: String\n    updatedAt: String\n  }\n  \"\"\"\n  User registration input type\n  \"\"\"\n  type Token {\n    token: String\n  }\n  \"\"\"\n  User registration input type\n  \"\"\"\n  input userRegistrationInput {\n    username: String!\n    email: String!\n    password: String!\n    confirmPassword: String!\n    usertype: UserType = STUDNET\n  }\n  \"\"\"\n  User signin input type\n  \"\"\"\n  input userSigninInput {\n    username: String\n    password: String\n  }\n  # \"\"\"\n  # User signin response type\n  # \"\"\"\n  # type signinResponse {\n  #   successMessage: String\n  #   usertype: UserType\n  #   username: String\n  #   email: String\n  #   token: String\n  #   _id: String\n  # }\n\n  type Query {\n    \"\"\"\n    finds currently loggedin user\n    \"\"\"\n    currentUser: User!\n    \"\"\"\n    authentication error message\n    \"\"\"\n    authenticationError: String\n    \"\"\"\n    finds list of all users\n    \"\"\"\n    users: [User!]!\n    \"\"\"\n    find user by email\n    \"\"\"\n    getUserByEmail(email: String): User!\n    \"\"\"\n    find user by username\n    \"\"\"\n    getUserByUsername(username: String): User!\n    \"\"\"\n    find user by user id\n    \"\"\"\n    getUserByID(userId: ID): User!\n  }\n  type Mutation {\n    \"\"\"\n    singnup by user\n    \"\"\"\n    signup(input: userRegistrationInput): Token\n    \"\"\"\n    signin user\n    \"\"\"\n    signin(input: userSigninInput): Token\n    \"\"\"\n    delete user\n    \"\"\"\n    deleteUserById(userId: ID): User\n  }\n"]);

var _apolloServerExpress = require("apollo-server-express");

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

//TODO: add documentation for each query, resolver, etc
//using triple double quote """Resolved description """

var userTypedefs = (0, _apolloServerExpress.gql)(_templateObject);

exports.userTypedefs = userTypedefs;