"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.topicTypedefs = undefined;

var _templateObject = _taggedTemplateLiteral(["\n  \"\"\"\n  Topic of question\n  \"\"\"\n  type Topic {\n    _id: ID\n    topic: String\n  }\n  \"\"\"\n  Topic of question\n  \"\"\"\n  type Topics {\n    _id: ID!\n    subjectId: ID!\n    topics: [Topic]!\n  }\n  \"\"\"\n  Topic Input\n  \"\"\"\n  input TopicInput {\n    topic: String!\n  }\n  \"\"\"\n  Sub Topic Input\n  \"\"\"\n  input SubTopicInput {\n    subTopic: String!\n  }\n  \"\"\"\n  Topic of question\n  \"\"\"\n  type SubTopic {\n    _id: ID!\n    subTopic: String!\n  }\n\n  \"\"\"\n  Sub Topic of question\n  \"\"\"\n  type SubTopics {\n    _id: ID!\n    topic: ID\n    subTopics: [SubTopic]\n  }\n\n  extend type Query {\n    \"\"\"\n    get all topics\n    \"\"\"\n    getAllTopics: [Topics]\n    \"\"\"\n    get Topic by id\n    \"\"\"\n    getTopicById(topicId: ID): Topic\n    \"\"\"\n    get random questions\n    \"\"\"\n    getAllSubTopics(topicId: ID): [SubTopics]!\n    \"\"\"\n    get sub topic by id\n    \"\"\"\n    getSubTopicById(topicId: ID, subTopicId: ID): SubTopic\n    # [SubTopics]!\n  }\n  extend type Mutation {\n    \"\"\"\n    add topic\n    \"\"\"\n    addTopic(topicNameArr: [TopicInput], subjectId: ID): Topics\n    \"\"\"\n    edit topic\n    \"\"\"\n    findTopicByIdAndUpdate(topicId: ID, topicUpdateOption: TopicInput): Topic\n    \"\"\"\n    delete topic\n    \"\"\"\n    deleteTopic(topicId: ID): [Topics]\n    \"\"\"\n    add sub topic\n    \"\"\"\n    addSubTopic(subTopicNameArr: [SubTopicInput], topicId: ID): [SubTopics]\n    \"\"\"\n    edit sub topic\n    \"\"\"\n    findSubTopicByIdandUpdate(\n      topicId: ID\n      subTopicId: ID\n      subTopicUpdateOption: SubTopicInput\n    ): [SubTopics]\n    \"\"\"\n    delete sub topic\n    \"\"\"\n    deleteSubTopic(topicId: ID, subTopicId: ID): [SubTopics]\n  }\n"], ["\n  \"\"\"\n  Topic of question\n  \"\"\"\n  type Topic {\n    _id: ID\n    topic: String\n  }\n  \"\"\"\n  Topic of question\n  \"\"\"\n  type Topics {\n    _id: ID!\n    subjectId: ID!\n    topics: [Topic]!\n  }\n  \"\"\"\n  Topic Input\n  \"\"\"\n  input TopicInput {\n    topic: String!\n  }\n  \"\"\"\n  Sub Topic Input\n  \"\"\"\n  input SubTopicInput {\n    subTopic: String!\n  }\n  \"\"\"\n  Topic of question\n  \"\"\"\n  type SubTopic {\n    _id: ID!\n    subTopic: String!\n  }\n\n  \"\"\"\n  Sub Topic of question\n  \"\"\"\n  type SubTopics {\n    _id: ID!\n    topic: ID\n    subTopics: [SubTopic]\n  }\n\n  extend type Query {\n    \"\"\"\n    get all topics\n    \"\"\"\n    getAllTopics: [Topics]\n    \"\"\"\n    get Topic by id\n    \"\"\"\n    getTopicById(topicId: ID): Topic\n    \"\"\"\n    get random questions\n    \"\"\"\n    getAllSubTopics(topicId: ID): [SubTopics]!\n    \"\"\"\n    get sub topic by id\n    \"\"\"\n    getSubTopicById(topicId: ID, subTopicId: ID): SubTopic\n    # [SubTopics]!\n  }\n  extend type Mutation {\n    \"\"\"\n    add topic\n    \"\"\"\n    addTopic(topicNameArr: [TopicInput], subjectId: ID): Topics\n    \"\"\"\n    edit topic\n    \"\"\"\n    findTopicByIdAndUpdate(topicId: ID, topicUpdateOption: TopicInput): Topic\n    \"\"\"\n    delete topic\n    \"\"\"\n    deleteTopic(topicId: ID): [Topics]\n    \"\"\"\n    add sub topic\n    \"\"\"\n    addSubTopic(subTopicNameArr: [SubTopicInput], topicId: ID): [SubTopics]\n    \"\"\"\n    edit sub topic\n    \"\"\"\n    findSubTopicByIdandUpdate(\n      topicId: ID\n      subTopicId: ID\n      subTopicUpdateOption: SubTopicInput\n    ): [SubTopics]\n    \"\"\"\n    delete sub topic\n    \"\"\"\n    deleteSubTopic(topicId: ID, subTopicId: ID): [SubTopics]\n  }\n"]);

var _apolloServerExpress = require("apollo-server-express");

function _taggedTemplateLiteral(strings, raw) { return Object.freeze(Object.defineProperties(strings, { raw: { value: Object.freeze(raw) } })); }

//TODO: add documentation for each query, resolver, etc
//using triple double quote """Resolved description """
//Math question type definition
var topicTypedefs = (0, _apolloServerExpress.gql)(_templateObject);

exports.topicTypedefs = topicTypedefs;